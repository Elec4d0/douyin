syntax = "proto3";
package comment;
option  go_package="api";

message douyin_comment_action_request {
  int64 user_id = 1; // 用户id
  int64 video_id = 2; // 视频id
  int32 action_type = 3; // 1-发布评论，2-删除评论
  optional string comment_text = 4; // 用户填写的评论内容，在action_type=1的时候使用
  optional int64 comment_id = 5; // 要删除的评论id，在action_type=2的时候使用
}

message douyin_comment_action_response {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  optional Comment comment = 3; // 评论成功返回评论内容，不需要重新拉取整个列表
}

message Comment {
  int64 id = 1; // 视频评论id
  User user =2; // 评论用户信息
  string content = 3; // 评论内容
  string create_date = 4; // 评论发布日期，格式 mm-dd
}

message douyin_comment_list_request {
  int64 user_id = 1; // 用户id
  int64 video_id = 2; // 视频id
}

message douyin_comment_list_response {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated Comment comment_list = 3; // 评论列表
}

message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  optional int64 follow_count = 3; // 关注总数
  optional int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  optional string avatar = 6; //用户头像
  optional string background_image = 7; //用户个人页顶部大图
  optional string signature = 8; //个人简介
  optional int64 total_favorited = 9; //获赞数量
  optional int64 work_count = 10; //作品数量
  optional int64 favorite_count = 11; //点赞数量
}

message douyin_commentserver_commentcount_request {
  int64 video_id = 1; // 视频id
}

message douyin_commentserver_commentcount_response{
  int64 comment_count = 1; // 评论数量
}

message douyin_commentserver_commentallcount_request{
  repeated int64 video_ids = 1; // 视频ids
}

message douyin_commentserver_commentallcount_response{
  repeated int64 comment_counts = 1; // 评论数量
}

//定义commentaction服务接口
service CommentServer{
  rpc CommentAction(douyin_comment_action_request) returns (douyin_comment_action_response){}
  rpc CommentList(douyin_comment_list_request) returns (douyin_comment_list_response){}
  rpc CommentCount(douyin_commentserver_commentcount_request) returns (douyin_commentserver_commentcount_response){}
  rpc CommentAllCount(douyin_commentserver_commentallcount_request) returns (douyin_commentserver_commentallcount_response){}
}